<div x-data="{ open: false, toggle() { this.open = ! this.open } }" class="flex justify-flex-start">
    <!-- Trigger -->
    <span @click="toggle()"> <button class="text-primary text-sm mr-4"> Edit </button></span>

    <!-- Slideover -->
    <div x-dialog x-model="open" style="display: none" class="fixed inset-0 overflow-hidden z-10" >
        <.form let={f} for={@edit_decision_changeset} action={@action}>
            <div class="fixed inset-y-0 right-0 max-w-lg w-full">
                <div class="p-4 border-l-[.5px] border-light-grey dark:border-dark-grey h-full flex flex-col justify-between bg-white dark:bg-slate overflow-y-auto" x-dialog:panel x-transition:enter="transition ease-out duration-300" x-transition:enter-start="translate-x-full" x-transition:enter-end="translate-x-0" x-transition:leave="transition ease-in duration-300" x-transition:leave-start="translate-x-0" x-transition:leave-end="translate-x-full" class="h-full w-full">
                    <div>
                        <!-- Header -->
                        <div class="flex justify-between items-center mb-10" required>
                            <h2 x-dialog:title class="text-lg font-bold text-black dark:text-light-grey">Edit Decision</h2>
                            <button type="button" @click="$dialog.close()" class="focus:ring-0 focus:ring-offset-0"> <Heroicons.LiveView.icon name="x-mark" type="solid" class="h-4 w-4" /></button>
                        </div>

                        <!-- Content -->
                        <div class="form_content">
                            <select id="new_teams" name="new_teams" class="block w-full my-2 dark:bg-slate dark:text-white border-light-grey dark:border-dark-grey text-black focus:border-primary">
                                <option disabled selected>Teams</option>
                                <%= for team <- @teams do %>
                                    <%= if Enum.empty?(@decision.teams) do %>
                                        <option value={"#{team.id}"}><%= team.name %></option>
                                    <% else %>
                                        <option value={"#{team.id}"} selected={List.first(@decision.teams).id == team.id}><%= team.name %></option>
                                    <% end %>
                                <% end %>
                            </select>

                            <%= textarea f, :what, class: "block w-full my-4 dark:text-white border-light-grey dark:border-dark-grey dark:bg-slate",
                                placeholder: "Describe the decision" %>

                            <%= textarea f, :why, class: "block w-full my-4 dark:text-white border-light-grey dark:border-dark-grey dark:bg-slate",
                                placeholder: "Provide context" %>

                            <%= text_input f, :reference, class: "block w-full my-4 dark:text-white border-light-grey dark:border-dark-grey dark:bg-slate",
                                placeholder: "Link for extra context" %>

                            <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css" />
                            <script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

                            <div class="text-xs text-grey my-2">Connect Goals</div>

                            <div
                                x-data={"{
                                    multiple: true,
                                    value: [
                                        #{
                                            for goal <- @decision.goals do
                                                "#{goal.id}, "
                                            end
                                        }
                                    ],
                                    options: [
                                        #{
                                            for goal <- @conn.assigns.goals do
                                                "{value: #{goal.id}, label: '#{goal.name}'}, "
                                            end
                                        }
                                    ],
                                    init() {
                                        this.$nextTick(() => {
                                            let choices = new Choices(this.$refs.select)

                                            let refreshChoices = () => {
                                                let selection = this.multiple ? this.value : [this.value]

                                                choices.clearStore()
                                                choices.setChoices(this.options.map(({ value, label }) => ({
                                                    value,
                                                    label,
                                                    selected: selection.includes(value),
                                                })))
                                            }

                                            refreshChoices()

                                            this.$refs.select.addEventListener('change', () => {
                                                this.value = choices.getValue(true)
                                            })

                                            this.$watch('value', () => refreshChoices())
                                            this.$watch('options', () => refreshChoices())
                                        })
                                    }
                                }"}
                                class="bg-white w-full"
                            >
                                <select x-ref="select" :multiple="multiple" name="selected_goals[]" id="selected_goals[]" class="bg-white w-full"></select>
                            </div>

                            <div class="text-xs text-grey my-2">Date</div>
                            <div x-data={"{ value: ['#{ @decision.date}'], init() { let picker = flatpickr(this.$refs.picker, {
                                    altInput: true, altFormat: 'F j, Y', dateFormat: 'Y-m-d', class: 'border-light-grey',
                                    defaultDate: this.value, onChange: (date, dateString) => { this.value = dateString }}); this.$watch('value', () => picker.setDate(this.value))}}"} >
                                <input name="date" id="date" class="block w-full mb-4 dark:text-white border-light-grey dark:border-dark-grey dark:bg-slate" x-ref="picker" type="text">
                            </div>

                            <div class="text-xs text-grey my-2">Schedule Reflection Date</div>
                            <div x-data={"{ value: ['#{ @decision.reflection_date }'], init() { let picker = flatpickr(this.$refs.picker, {
                                    altInput: true, altFormat: 'F j, Y', dateFormat: 'Y-m-d', class: 'border-light-grey',
                                    defaultDate: this.value,  onChange: (date, dateString) => { this.value = dateString }}); this.$watch('value', () => picker.setDate(this.value))}}"} >
                                <input name="reflection_date" id="reflection_date" class="block w-full mb-4 dark:text-white border-light-grey dark:border-dark-grey dark:bg-slate" x-ref="picker" type="text">
                            </div>


                            <%= if @decision.approval != nil && @decision.approval.approved != nil  do %>
                                <div class="text-xs text-grey my-2 pb-2">Requested Approval </div>
                                <div class="my-2 text-sm dark:border-dark-grey font-medium">
                                    <div class="text-xs">
                                        <span class="mr-1"><%= @decision.approval.user.email %></span> <%= if @decision.approval.approved, do: raw("<span class='text-primary mr-1'>approved</span>"), else: raw("<span class='text-red mr-1'>denied</span>") %>
                                        <div class="mt-2 text-grey">
                                            <%= @decision.approval.note %>
                                        </div>
                                    </div>
                                </div>
                            <% else %>
                                <div class="text-xs text-grey my-2">Request Approval </div>
                                <select id="approval_user" name="approval_user" class="block w-full my-2 dark:bg-slate dark:text-white border-light-grey dark:border-dark-grey text-black focus:border-primary">
                                    <option disabled selected>Team Members</option>
                                    <%= for user <- @users do %>
                                        <option value={"#{user.id}"}><%= user.email %></option>
                                    <% end %>
                                </select>
                            <% end %>



                            <%= hidden_input f, :redirect_to, value: @conn.request_path %>
                        </div>
                    </div>

                    <!-- Footer -->
                    <div class="flex justify-end space-x-2">
                        <button type="button" x-on:click="$dialog.close()" class="text-sm dark:text-light-grey rounded-lg px-5 py-2.5 focus:border-primary">Close</button>
                        <%= submit do  %>
                            <button class="text-white bg-primary py-2 px-6 font-bold mx-2"> Save </button>
                        <% end %>
                    </div>
                </div>
            </div>
        </.form>
    </div>
</div>
